name: windows-release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        compiler: [msvc, mingw]
        config: [Debug, Release]
    steps:
      - name: Checkout code with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.23'

      - name: Setup MinGW
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-ninja
        if: matrix.compiler == 'mingw'

      - name: Configure and Build (MSVC)
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config }} -G "Visual Studio 2022"
          cmake --build . --config ${{ matrix.config }}
        if: matrix.compiler == 'msvc'

      - name: Configure and Build (MinGW)
        shell: msys2 {0}
        run: |
          mkdir build && cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config }} -G "MinGW Makefiles"
          cmake --build .
        if: matrix.compiler == 'mingw'

      - name: Run Unit Tests
        run: |
          cd build
          ctest --config ${{ matrix.config }} --output-on-failure
        if: success()

      - name: Package Release (MSVC)
        run: |
          cd build
          cpack -G ZIP -C ${{ matrix.config }}
        if: matrix.compiler == 'msvc' && matrix.config == 'Release'

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.compiler }}-${{ matrix.config }}
          path: |
            build/TrialAndError/
            !build/TrialAndError/**/*.pdb
        if: always()

      - name: Upload release package
        uses: actions/upload-artifact@v4
        with:
          name: TrialAndError-windows-release
          path: build/*.zip
        if: matrix.compiler == 'msvc' && matrix.config == 'Release'

  release:
    needs: build
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download release artifacts
        uses: actions/download-artifact@v4
        with:
          name: TrialAndError-windows-release
          path: ./release

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/*.zip
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}